name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  php-ci:
    runs-on: ubuntu-latest
    name: Análisis de PHP

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Instalar dependencias PHP
        run: |
          if [ -f composer.json ]; then
            composer install --no-interaction --prefer-dist
          fi

      - name: PHPStan - Análisis estático
        run: |
          if [ -f vendor/bin/phpstan ]; then
            # Se agregó frontend/views/ al análisis
            vendor/bin/phpstan analyse backend/ frontend/views/ --level=max
          else
            echo "phpstan no está instalado."
          fi

      - name: PHP_CodeSniffer - Estilo de código
        run: |
          if [ -f vendor/bin/phpcs ]; then
            # Se agregó frontend/views/ al análisis
            vendor/bin/phpcs backend/ frontend/views/ --standard=PSR12
          else
            echo "phpcs no está instalado."
          fi

  frontend-ci:
    runs-on: ubuntu-latest
    name: Análisis de HTML, CSS y JS

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instalar dependencias de Node
        run: |
          if [ -f package.json ] && [ -f package-lock.json ]; then
          npm ci
          else
          echo "package-lock.json no encontrado. Usando npm install..."
          npm install
          fi

      - name: ESLint - Análisis JS
        run: |
          npx eslint . || exit 1

      - name: Stylelint - Análisis CSS
        run: |
          npx stylelint "**/*.css" || exit 1

      - name: HTMLHint - Validación HTML
        run: |
          npx htmlhint "**/*.html" || exit 1

      - name: Prettier - Validación de formato (sin fallar)
        run: npx prettier . --check || echo "Prettier encontró diferencias, pero no se detuvo el flujo"

      - name: Jest - Pruebas JS (si aplica)
        run: |
          if [ -f node_modules/.bin/jest ]; then
            npx jest
          else
            echo "Jest no configurado. Saltando pruebas JS."
          fi

  security-scan:
    runs-on: ubuntu-latest
    name: Escaneo de seguridad con Trivy
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Instalar Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Escanear dependencias del proyecto PHP
        run: |
          trivy fs backend/ --exit-code 1 --severity HIGH,CRITICAL || echo "⚠️ Vulnerabilidades detectadas."

      - name: Escanear dependencias del frontend (Node.js)
        run: |
          trivy fs frontend/ --exit-code 1 --severity HIGH,CRITICAL || echo "⚠️ Vulnerabilidades detectadas."
